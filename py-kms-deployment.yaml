apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '8'
    field.cattle.io/publicEndpoints: >-
      [{"addresses":["10.9.15.150"],"port":1688,"protocol":"TCP","serviceName":"default:py-kms-loadbalancer","allNodes":false},{"addresses":["10.9.15.150"],"port":8080,"protocol":"TCP","serviceName":"default:py-kms-loadbalancer","allNodes":false}]
  name: py-kms
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-default-py-kms
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-default-py-kms
    spec:
      containers:
        - env:
            - name: IP
              value: '::'
            - name: HWID
              value: RANDOM
            - name: LOGLEVEL
              value: INFO
          image: ghcr.io/py-kms-organization/py-kms:python3
          imagePullPolicy: Always
          name: container-0
          ports:
            - containerPort: 1688
              name: tcp1688
              protocol: TCP
            - containerPort: 8080
              name: tcp8080
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /home/py-kms/db
              name: vol-nsyus
              subPath: db
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: vol-nsyus
          persistentVolumeClaim:
            claimName: mypvc
